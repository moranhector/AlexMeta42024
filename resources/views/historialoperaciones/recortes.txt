<script>
    function showDistribChart(selectedUOR) {

        var botonOcultar = document.getElementById("btn_nivel1");

        // Ocultar el div cambiando su estilo
        botonOcultar.style.display = "block";

        // Realiza una llamada a la API con el UOR seleccionado
        //console.log('showAnotherChart ', 'http://localhost:8000/uor-explode/' + selectedUOR);
        fetch(SERVER_NODE + '/jubilaciones_uor2?JUR=' + selectedUOR) // Reemplaza 'uor' con la URL correcta de tu API Laravel
            // fetch('http://dic-alex-tst.mendoza.gov.ar:3000/jubilaciones_uor2?JUR=' + selectedUOR) // Reemplaza 'uor' con la URL correcta de tu API Laravel
            //fetch('http://localhost:3000/jubilaciones_uor2?JUR=' + selectedUOR ) // Reemplaza 'uor' con la URL correcta de tu API Laravel        


            .then(response => response.json())
            .then(jsonData => {
                // Convertir los datos para usarlos en el nuevo gráfico
                var newData = jsonData.data.map((item, index) => ({
                    name: item.UOR,
                    value: item.CANTIDAD,
                    colorValue: index, // Usamos el índice como valor de color
                    color: getColorForIndex(index) // Obtener color basado en el índice
                }));


                // Función para obtener colores basados en el índice
                function getColorForIndex(index) {
                    var colors = ['#008B8B', '#8A2BE2', '#FF1493', '#00BFFF', '#808080', '#FF4500', '#FFD700'];
                    return colors[index % colors.length]; // Cicla a través de los colores
                }

                // Crear el nuevo gráfico TreeMap
                Highcharts.chart('canvas_distrib_uor', {
                    colorAxis: {
                        minColor: '#FFFFFF',
                        maxColor: Highcharts.getOptions().colors[0]
                    },
                    series: [{
                        type: 'treemap',
                        layoutAlgorithm: 'squarified',
                        clip: false,
                        data: newData,
                        title: {
                            text: 'UOR: ' + selectedUOR
                        },
                        events: {
                            click: function(event) {
                                // Obtener el UOR seleccionado
                                //var selectedUOR = event.point.name;
                                //alert('Clic en el sector: ' +  selectedUOR );                            
                                var selectedUOR2 = event.point.name;
                                var encodedUOR2 = encodeURIComponent(selectedUOR2);
                                console.log('event point name', encodedUOR2);
                                //alert('Clic en el sector: ', selectedUOR2 );                                                            
                                previewExcel(SERVER_NODE + '/excel_jubilaciones_detalle_uor_todos/' + selectedUOR2);
                                //previewExcel('http://localhost:3000/excel_jubilaciones_detalle_uor_todos/' + selectedUOR2  );                                     
                                // Llamar a la función para mostrar el nuevo gráfico
                                //showDistribChart(selectedUOR);
                            },



                        }

                    }],
                    title: {
                        text: 'UOR:' + selectedUOR
                    }
                });

            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));
    }



    // Función para restaurar el estado original
    function restoreOriginalChart() {

        var divParaOcultar = document.getElementById("canvas_distrib_uor2");

        // Ocultar el div cambiando su estilo
        divParaOcultar.style.display = "none";

        var divParaOcultar = document.getElementById("canvas_distrib_uor");

        // Ocultar el div cambiando su estilo
        divParaOcultar.style.display = "block";

    }


    // Función para restaurar el estado original
    function showSecondaryChart() {

        var divParaOcultar = document.getElementById("canvas_distrib_uor2");

        // Ocultar el div cambiando su estilo
        divParaOcultar.style.display = "block";

        var divParaOcultar = document.getElementById("canvas_distrib_uor");

        // Ocultar el div cambiando su estilo
        divParaOcultar.style.display = "none";

    }



    document.addEventListener("DOMContentLoaded", function() {
        // Obtener los datos desde la API REST en Laravel
        fetch(SERVER_NODE + '/jubilaciones_uor')
            //fetch('http://localhost:3000/jubilaciones_uor')
            .then(response => response.json())
            .then(jsonData => {
                // Convertir los datos para usarlos en el gráfico
                console.log(jsonData.data);
                var data = jsonData.data.map((item, index) => ({
                    name: item.UOR,
                    value: item.CANTIDAD,
                    colorValue: index, // Usamos el índice como valor de color
                    color: getColorForIndex(index) // Obtener color basado en el índice
                }));

                // Función para obtener colores basados en el índice
                function getColorForIndex(index) {
                    var colors = ['#008B8B', '#8A2BE2', '#FF1493', '#00BFFF', '#808080', '#FF4500', '#FFD700'];
                    return colors[index % colors.length]; // Cicla a través de los colores
                }

                // Crear el gráfico TreeMap
                Highcharts.chart('NOcanvas_distrib_uor', {
                    colorAxis: {
                        minColor: '#FFFFFF',
                        maxColor: Highcharts.getOptions().colors[0]
                    },
                    series: [{
                        type: 'treemap',
                        layoutAlgorithm: 'squarified',
                        clip: false,
                        data: data,
                        events: {
                            click: function(event) {
                                // Obtener el UOR seleccionado
                                var selectedUOR = event.point.name;

                                //alert('Clic en el sector: ' + selectedUOR);

                                // Llamar a la función para mostrar el nuevo gráfico
                                showDistribChart(selectedUOR);

                                // var divParaOcultar = document.getElementById("canvas_distrib_uor");

                                // // Ocultar el div cambiando su estilo
                                // divParaOcultar.style.display = "none";

                            }
                        }
                    }],
                    title: {
                        text: 'Mujeres y Hombres:'
                    }
                });
            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));

        saveOriginalChartState();
    });
</script>


<script>
    var map = L.map('map').setView([-32.8986, -68.8474], 13);



    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
    }).addTo(map);
</script>



<script>
    // Inicialización del DataTable
    new DataTable('#table_personas', {
        language: {
            url: 'http://cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/Spanish.json' // Asegúrate de tener acceso a esta URL
        },
        // deferRender: true, // Retarda la carga de celdas hasta que son necesarias    
        searchDelay: 1000,
        ajax: SERVER_NODE + '/personas2',
        columns: [{
                data: 'SCO_GB_NAME'
            },
            {
                data: 'STD_SSN'
            },
            // {
            //     data: 'STD_ID_PERSON'
            // },
            {
                data: 'STD_ID_PERSON',
                render: function(data) {
          
                    return '<button class="btn btn-primary export-button" data-std_id_person="' + data + '">' +
                        'Ver' +
                        '</button>';
                }


            }
        ],

    });


    // // Agrega un evento de clic utilizando delegación en el contenedor para manejar dinámicamente los botones
    // document.querySelector('#table_personas').addEventListener('click', function(event) {
    //     if (event.target.classList.contains('export-button')) {
    //         // Obtiene la UOR desde el atributo data
    //         const std_id_person = event.target.dataset.std_id_person;
    //         console.log('std_id_person', event.target.dataset.std_id_person);
    //         mostrarFormulario(std_id_person);

    //     }
    // });

    document.querySelector('#table_personas').addEventListener('click', function(event) {
    if (event.target.classList.contains('export-button')) {
        // Obtiene la UOR desde el atributo data
        const std_id_person = event.target.dataset.std_id_person;
        console.log('std_id_person', event.target.dataset.std_id_person);

        // Construye el contenido de la modal
        const modalContent = document.querySelector(`#tab${std_id_person}`).innerHTML;

        // Abre la modal con el contenido construido
        openModal(`Información de Persona ${std_id_person}`, modalContent);
    }
});



</script>




.small-box {
    text-align: center;
    padding: 15px;
    margin-bottom: 20px;
    border-radius: 10px;
    color: #fff;
}

.small-box h3 {
    font-size: 28px;
    margin-top: 0;
}

.small-box p {
    font-size: 14px;
}

/* Colores */
.bg-planta {
    background-color: #ff6b6b; /* Rojo anaranjado */
}

.bg-jubilaciones {
    background-color: #72d572; /* Verde claro */
}

.bg-ausentismo {
    background-color: #f9cb42; /* Amarillo */
}

.bg-altas {
    background-color: #5499c7; /* Azul claro */
}

html,
body,
#containerb {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

#div_generoxv {
    width: 50%;
    height: 50%;
    margin: 0;
    padding: 0;
}

#div_uor {
    width: 100%;
    height: 100%;
    margin: 0;
    padding: 0;
}

.tarjeta-container {
    margin-top: 20px;
    /* Puedes ajustar el valor según sea necesario */
}

/* Agrega este estilo CSS a tu hoja de estilos */
.borde-superior {
    border-top: 3px solid #3498db; /* Color celeste (#3498db) y grosor del borde */
}

.loader {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    display: block;
    margin: 15px auto;
    position: relative;
    box-sizing: border-box;
    animation: rotation 1s linear infinite;
}

.loader::after,
.loader::before {
    content: '';
    box-sizing: border-box;
    position: absolute;
    left: 0;
    top: 0;
    background: #008B8B;
    width: 16px;
    height: 16px;
    transform: translate(-50%, 50%);
    border-radius: 50%;
}

.loader::before {
    left: auto;
    right: 0;
    background: #FFF;
    transform: translate(50%, 100%);
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }
}

#myTable tbody tr td {
    height: 30% !important;
    font-size: 80% !important;
}

/* Estilos para la ventana modal */
.modal {
    display: none;
    position: fixed;
    z-index: 1;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    /* Habilitar la barra de desplazamiento */
    background-color: rgba(0, 0, 0, 0.5);
}

/* Estilos para el contenido de la ventana modal */
.modal-content {
    background-color: white;
    margin: 10% auto;
    /* Ubicación vertical, margen horizontal automático */
    padding: 20px;
    border: 1px solid #888;
    max-width: calc(100% - 200px);
    /* Ancho máximo con márgenes izquierdo y derecho */
    max-height: 70%;
    /* Altura máxima para la ventana modal */
    overflow-y: auto;
    /* Habilitar la barra de desplazamiento vertical */
}

/* Estilos para la tabla */
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 20px;
}

th {
    background-color: blue;
    /* Color de fondo azul para las celdas de encabezado */
    color: white;
    /* Texto blanco para las celdas de encabezado */
    padding: 8px;
    text-align: left;
}

td {
    padding: 8px;
    text-align: left;
}

tfoot button {
    background-color: blue;
    /* Color de fondo azul para el botón */
    color: white;
    /* Texto blanco para el botón */
    padding: 8px 16px;
    border: none;
    cursor: pointer;
}

tfoot button:hover {
    background-color: #0044cc;
    /* Cambio de color al pasar el cursor por encima */
}

.close {
    color: #aaa;
    float: right;
    font-size: 28px;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

/* Estilo para la fila que contiene el botón de Excel */
.excel-button-row th {
    background-color: white;
    /* Fondo blanco para la fila del botón de Excel */
}

.formulario {
    max-width: 900px;
    /* Ajusta el ancho máximo según tus preferencias */
    margin: 0 auto;
    /* Centra el formulario en la página */
    padding: 20px;
    /* Añade un poco de espacio alrededor del formulario */
    background-color: #ffffff;
    /* Color de fondo opcional */
}

.formulario label {
    display: block;
    /* Hace que las etiquetas se muestren en una nueva línea */
    margin-bottom: 5px;
    /* Añade espacio entre las etiquetas y los campos de entrada */
}

.formulario input {
    width: 100%;
    /* Hace que los campos de entrada ocupen todo el ancho disponible */
    box-sizing: border-box;
    /* Incluye el padding y el borde en el ancho total */
    margin-bottom: 10px;
    /* Añade espacio entre los campos de entrada */
}

.formulario button {
    width: 100%;
    /* Hace que el botón ocupe todo el ancho disponible */
    box-sizing: border-box;
    /* Incluye el padding y el borde en el ancho total */
}

#map {
    height: 400px;
    width: 900px;
}

/* Estilo para la tabla */
#table_personas {
    background-color: white;
    /* Fondo blanco */
    border-collapse: collapse;
    /* Para asegurar que las celdas se fusionen correctamente */
    width: 100%;
}

/* Estilo para las celdas */
#table_personas th,
#table_personas td {
    border: 1px solid #ddd;
    /* Línea gris fina entre celdas */
    padding: 8px;
    /* Espacio interno */
    text-align: left;
    /* Alineación del texto */
}

/* Estilo para los encabezados */
#table_personas th {
    background-color: #007bff;
    /* Fondo azul */
    color: white;
    /* Texto negro */
    font-weight: bold;
    /* Texto en negrita */
    border-bottom: 2px solid black;
    /* Línea negra más gruesa en la parte inferior */
}

/* Estilo para el pie de tabla */
#table_personas tfoot {
    background-color: #007bff;
    /* Fondo azul */
    color: white;
    /* Texto blanco */
    font-weight: bold;
    /* Texto en negrita */
}




<script>
    var url = "{{url('http://localhost:3000/altasbajas/202303/202402')}}";


    var etiquetas = [];
    var altas = [];
    var bajas = [];
    var graficoAltasBajas; // Mueve la declaración aquí para que esté en un alcance más amplio



    var cantidades = [];


    $(document).ready(function() {

        console.log('entra a canvasaltasbajas');
        $.get(url, function(response) {

            const rowsData = response.rows; // Accede al array de objetos

            rowsData.forEach(function(row) {
                console.log('data:', row);
                etiquetas.push(row.PERIODO); // Cambio en la etiqueta
                altas.push(row.ALEX_ALTAS);
                bajas.push(row.ALEX_BAJAS);
                // cantidades.push(row.ALEX_ALTAS); // Cambio en la cantidad
            });



            var ctx = document.getElementById("canvasaltasbajas").getContext('2d');
            graficoAltasBajas = new Chart(ctx, {
                type: 'bar',

                data: {
                    labels: etiquetas,
                    datasets: [{
                        label: 'Altas Signos',
                        data: altas,
                        backgroundColor: '#33ECFF',
                        hoverBackgroundColor: '#3196C5',
                        borderColor: '#000000',
                        borderWidth: 2
                    }, {
                        label: 'Bajas Signos',
                        data: bajas,
                        backgroundColor: '#FF5733',
                        hoverBackgroundColor: '#C53126',
                        borderColor: '#000000',
                        borderWidth: 2
                    }]
                },



                options: {
                    title: {
                        display: true,
                        text: 'Altas por Periodo'
                    },
                    scales: {
                        yAxes: [{
                            ticks: {
                                beginAtZero: true
                            }
                        }]
                    },
                    onClick: function(event) {
                        handleClick(event, graficoAltasBajas)
                    },


                }
            });
        });
    });

    //     function handleClick(event) {
    //   const activeElement = graficoAltasBajas.getElementsAtEventForMode(event, 'nearest', { intersect: true }, false)[0];
    //   if (activeElement) {
    //     // Aquí puedes llamar a tu función de JavaScript pasando el dato correspondiente
    //     console.log('Haz hecho clic en la etiqueta:', etiquetas[activeElement.index]);
    //   }

    function handleClick(event, chart) {
        const activeElement = chart.getElementsAtEventForMode(event, 'nearest', {
            intersect: true
        }, false)[0];
        if (activeElement) {
            const periodo = etiquetas[activeElement.index];
            alert('Haz hecho clic en la etiqueta: ' + periodo);
        }
    }
</script>





<!-- UOR
██╗   ██╗███╗   ██╗██╗██████╗  █████╗ ██████╗      ██████╗ ██████╗  ██████╗ 
██║   ██║████╗  ██║██║██╔══██╗██╔══██╗██╔══██╗    ██╔═══██╗██╔══██╗██╔════╝ 
██║   ██║██╔██╗ ██║██║██║  ██║███████║██║  ██║    ██║   ██║██████╔╝██║  ███╗
██║   ██║██║╚██╗██║██║██║  ██║██╔══██║██║  ██║    ██║   ██║██╔══██╗██║   ██║
╚██████╔╝██║ ╚████║██║██████╔╝██║  ██║██████╔╝    ╚██████╔╝██║  ██║╚██████╔╝
 ╚═════╝ ╚═╝  ╚═══╝╚═╝╚═════╝ ╚═╝  ╚═╝╚═════╝      ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ 
                                                                             -->



<!-- FIN UOR -->
<!-- FIN UOR -->
<!-- FIN UOR -->




<!-- 
╔═╗┬─┐┌─┐┌─┐┬┌─┐┌─┐  ╔═╗┬  ┌─┐┌┐┌┌┬┐┌─┐
║ ╦├┬┘├─┤├┤ ││  │ │  ╠═╝│  ├─┤│││ │ ├─┤
╚═╝┴└─┴ ┴└  ┴└─┘└─┘  ╩  ┴─┘┴ ┴┘└┘ ┴ ┴ ┴
 -->


<script>
    // SEGUNDO NIVEL DEL GRAFICO
    function showDistribChart(selectedUOR) {

        var botonOcultar = document.getElementById("btn_nivel1");

        // Ocultar el div cambiando su estilo
        botonOcultar.style.display = "block";

        // Realiza una llamada a la API con el UOR seleccionado
        //console.log('showAnotherChart ', 'http://localhost:8000/uor-explode/' + selectedUOR);
        fetch(SERVER_NODE + '/planta_uor2?JUR=' + selectedUOR) // Reemplaza 'uor' con la URL correcta de tu API Laravel
            // fetch('http://dic-alex-tst.mendoza.gov.ar:3000/jubilaciones_uor2?JUR=' + selectedUOR) // Reemplaza 'uor' con la URL correcta de tu API Laravel
            //fetch('http://localhost:3000/jubilaciones_uor2?JUR=' + selectedUOR ) // Reemplaza 'uor' con la URL correcta de tu API Laravel        


            .then(response => response.json())
            .then(jsonData => {
                // Convertir los datos para usarlos en el nuevo gráfico
                var newData = jsonData.data.map((item, index) => ({
                    name: item.UOR,
                    value: item.CANTIDAD,
                    colorValue: index, // Usamos el índice como valor de color
                    color: getColorForIndex(index) // Obtener color basado en el índice
                }));


                // Función para obtener colores basados en el índice
                function getColorForIndex(index) {
                    var colors = ['#008B8B', '#8A2BE2', '#FF1493', '#00BFFF', '#808080', '#FF4500', '#FFD700'];
                    return colors[index % colors.length]; // Cicla a través de los colores
                }

                // Crear el nuevo gráfico TreeMap
                Highcharts.chart('canvas_distrib_uor', {
                    colorAxis: {
                        minColor: '#FFFFFF',
                        maxColor: Highcharts.getOptions().colors[0]
                    },
                    series: [{
                        type: 'treemap',
                        layoutAlgorithm: 'squarified',
                        clip: false,
                        data: newData,
                        title: {
                            text: 'UOR: ' + selectedUOR
                        },
                        events: {
                            click: function(event) {
                                // Obtener el UOR seleccionado
                                //var selectedUOR = event.point.name;
                                //alert('Clic en el sector: ' +  selectedUOR );                            
                                var selectedUOR2 = event.point.name;
                                var encodedUOR2 = encodeURIComponent(selectedUOR2);
                                console.log('event point name', encodedUOR2);
                                //alert('Clic en el sector: ', selectedUOR2 );                                                            
                                previewExcel(SERVER_NODE + '/excel_jubilaciones_detalle_uor_todos/' + selectedUOR2);
                                //previewExcel('http://localhost:3000/excel_jubilaciones_detalle_uor_todos/' + selectedUOR2  );                                     
                                // Llamar a la función para mostrar el nuevo gráfico
                                //showDistribChart(selectedUOR);
                            },



                        }

                    }],
                    title: {
                        text: 'UOR:' + selectedUOR
                    }
                });

            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));
    }
</script>

<script>
    // PRIMER NIVEL DEL GRAFICO
    function GraficoTotal() {


        var botonOcultar = document.getElementById("btn_nivel1");

        // Ocultar el div cambiando su estilo
        botonOcultar.style.display = "none";

        fetch(SERVER_NODE + '/planta_uor')
            .then(response => response.json())
            .then(jsonData => {
                console.log(jsonData.data);
                var data = jsonData.data.map((item, index) => ({
                    name: item.UOR,
                    value: item.CANTIDAD,
                    colorValue: index,
                    color: getColorForIndex(index)
                }));

                function getColorForIndex(index) {
                    var colors = ['#008B8B', '#8A2BE2', '#FF1493', '#00BFFF', '#808080', '#FF4500', '#FFD700'];
                    return colors[index % colors.length];
                }

                Highcharts.chart('canvas_distrib_uor', {
                    colorAxis: {
                        minColor: '#FFFFFF',
                        maxColor: Highcharts.getOptions().colors[0]
                    },
                    series: [{
                        type: 'treemap',
                        layoutAlgorithm: 'squarified',
                        clip: false,
                        data: data,
                        events: {
                            click: function(event) {
                                var selectedUOR = event.point.name;
                                showDistribChart(selectedUOR);
                            }
                        }
                    }],
                    title: {
                        text: 'Planta Total:'
                    }
                });
            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));


    }

    // Llamar a la función al cargar el DOM
    document.addEventListener("DOMContentLoaded", GraficoTotal);

    // Llamar a la función al hacer clic en el botón (reemplaza 'miBoton' con el ID de tu botón)
    //document.getElementById('miBoton').addEventListener('click', cargarDatosYCrearGrafico);
</script>





<script>
    function OLDshowDistribChart(selectedUOR) {
        // Realiza una llamada a la API con el UOR seleccionado
        //console.log('showAnotherChart ', 'http://localhost:8000/uor-explode/' + selectedUOR);
        fetch('http://dic-alex-tst.mendoza.gov.ar/uor-explode/' + selectedUOR) // Reemplaza 'uor' con la URL correcta de tu API Laravel
            .then(response => response.json())
            .then(jsonData => {
                // Convertir los datos para usarlos en el nuevo gráfico
                var newData = jsonData.map((item, index) => ({
                    name: item.uor,
                    value: item.cantidad,
                    colorValue: index, // Usamos el índice como valor de color
                    color: getColorForIndex(index) // Obtener color basado en el índice
                }));


                // Función para obtener colores basados en el índice
                function getColorForIndex(index) {
                    var colors = ['#008B8B', '#8A2BE2', '#FF1493', '#00BFFF', '#808080', '#FF4500', '#FFD700'];
                    return colors[index % colors.length]; // Cicla a través de los colores
                }

                // Crear el nuevo gráfico TreeMap
                Highcharts.chart('canvas_distrib_uor', {
                    colorAxis: {
                        minColor: '#FFFFFF',
                        maxColor: Highcharts.getOptions().colors[0]
                    },
                    series: [{
                        type: 'treemap',
                        layoutAlgorithm: 'squarified',
                        clip: false,
                        data: newData,
                        title: {
                            text: 'UOR: ' + selectedUOR
                        }
                    }],
                    title: {
                        text: 'UOR:' + selectedUOR
                    }
                });






            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));
    }

    document.addEventListener("DOMContentLoaded", function() {
        // Obtener los datos desde la API REST en Laravel
        fetch(SERVER_NODE + '/planta_uor/')
            .then(response => response.json())
            .then(jsonData => {
                // Convertir los datos para usarlos en el gráfico
                var data = jsonData.map((item, index) => ({
                    name: item.uor,
                    value: item.cantidad,
                    colorValue: index, // Usamos el índice como valor de color
                    color: getColorForIndex(index) // Obtener color basado en el índice
                }));

                // Función para obtener colores basados en el índice
                function getColorForIndex(index) {
                    var colors = ['#008B8B', '#8A2BE2', '#FF1493', '#00BFFF', '#808080', '#FF4500', '#FFD700'];
                    return colors[index % colors.length]; // Cicla a través de los colores
                }

                // Crear el gráfico TreeMap
                Highcharts.chart('canvas_distrib_uor', {
                    colorAxis: {
                        minColor: '#FFFFFF',
                        maxColor: Highcharts.getOptions().colors[0]
                    },
                    series: [{
                        type: 'treemap',
                        layoutAlgorithm: 'squarified',
                        clip: false,
                        data: data,
                        events: {
                            click: function(event) {
                                // Obtener el UOR seleccionado
                                var selectedUOR = event.point.name;

                                //alert('Clic en el sector: ' +  selectedUOR );                            

                                // Llamar a la función para mostrar el nuevo gráfico
                                showDistribChart(selectedUOR);
                            }
                        }
                    }],
                    title: {
                        text: 'Total:'
                    }
                });
            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));
    });
</script>

<!-- 
<script>
    anychart.onDocumentReady(function() {
        // create pie chart
        var chart = anychart.pie();

        // set chart title
        chart.title('Distribución por Género');

        // Obtener los datos desde la API REST en Laravel
        fetch('http://localhost:8000/generoxv') // Reemplaza 'generoxv' con la URL correcta de tu API Laravel
            .then(response => response.json())
            .then(jsonData => {
                // Convertir los datos para usarlos en el chart
                var chartData = jsonData.map(item => ({
                    x: item.x,
                    value: item.value
                }));

                // set chart data
                chart.data(chartData);

                // Asignar colores personalizados a los sectores
                chart.palette(['#FF1493', '#00BFFF', '#808080']); // Rosa, Azul, Gris

                // Agregar un evento de clic a los sectores
                chart.listen('pointClick', function(e) {
                    var point = e.point;
                    alert('Clic en el sector: ' + point.x + ', Valor: ' + point.value);
                });


                // set container id for the chart
                chart.container('div_generoxv');

                // initiate chart drawing
                chart.draw();
            })
            .catch(error => console.error('Error al obtener los datos desde la API:', error));
    });
</script> -->

